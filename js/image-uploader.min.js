/*! Image Uploader - v1.2.3 - 26/11/2019
 * Copyright (c) 2019 Christian Bayer; Licensed MIT */
!(function (e) {
  e.fn.imageUploader = function (t) {
    let n,
      i = {
        preloaded: [],
        imagesInputName: "images",
        preloadedInputName: "preloaded",
        label: "Click here to upload or drop media here",
        extensions: [".jpg", ".jpeg", ".png", ".gif", ".svg"],
        mimes: ["image/jpeg", "image/png", "image/gif", "image/svg+xml"],
        maxSize: void 0,
        maxFiles: void 0,
      },
      a = this,
      s = new DataTransfer();
    (a.settings = {}),
      (a.init = function () {
        (a.settings = e.extend(a.settings, i, t)),
          a.each(function (t, n) {
            let i = o();
            if (
              (e(n).append(i),
              i.on("dragover", r.bind(i)),
              i.on("dragleave", r.bind(i)),
              i.on("drop", p.bind(i)),
              a.settings.preloaded.length)
            ) {
              i.addClass("has-files");
              let e = i.find(".uploaded");
              for (let t = 0; t < a.settings.preloaded.length; t++)
                e.append(
                  l(a.settings.preloaded[t].src, a.settings.preloaded[t].id, !0)
                );
            }
          });
      });
    let o = function () {
        let t = e("<div>", { class: "image-uploader" });
        n = e("<input>", {
          type: "file",
          id: a.settings.imagesInputName + "-" + h(),
          name: a.settings.imagesInputName + "[]",
          accept: a.settings.extensions.join(","),
          multiple: "",
        }).appendTo(t);
        e("<div>", { class: "uploaded" }).appendTo(t);
        let i = e("<div>", { class: "upload-text hover:cursor-pointer" }).appendTo(t);
        e(buttonMarkup).appendTo(i),
          e(textMarkup).appendTo(i);
        return (
          t.on("click", function (e) {
            d(e), n.trigger("click");
          }),
          n.on("click", function (e) {
            e.stopPropagation();
          }),
          n.on("change", p.bind(t)),
          t
        );
      },
      d = function (e) {
        e.preventDefault(), e.stopPropagation();
      },
      l = function (t, i, o) {
        let l = e("<div>", { class: "uploaded-image" }),
          r =
            (e("<img>", { src: t }).appendTo(l),
            e("<button>", { class: "delete-image" }).appendTo(l));
        e(deleteIcon).appendTo(r);
        if (o) {
          l.attr("data-preloaded", !0);
          e("<input>", {
            type: "hidden",
            name: a.settings.preloadedInputName + "[]",
            value: i,
          }).appendTo(l);
        } else l.attr("data-index", i);
        return (
          l.on("click", function (e) {
            d(e);
          }),
          r.on("click", function (t) {
            d(t);
            let o = l.parent();
            if (!0 === l.data("preloaded"))
              a.settings.preloaded = a.settings.preloaded.filter(function (e) {
                return e.id !== i;
              });
            else {
              let t = parseInt(l.data("index"));
              o.find(".uploaded-image[data-index]").each(function (n, i) {
                n > t && e(i).attr("data-index", n - 1);
              }),
                s.items.remove(t),
                n.prop("files", s.files);
            }
            l.remove(),
              o.children().length || o.parent().removeClass("has-files");
          }),
          l
        );
      },
      r = function (t) {
        d(t),
          "dragover" === t.type
            ? e(this).addClass("drag-over")
            : e(this).removeClass("drag-over");
      },
      p = function (t) {
        d(t);
        let i = e(this),
          o = Array.from(t.target.files || t.originalEvent.dataTransfer.files),
          l = [];
        e(o).each(function (e, t) {
          (a.settings.extensions && !g(t)) ||
            (a.settings.mimes && !c(t)) ||
            (a.settings.maxSize && !f(t)) ||
            (a.settings.maxFiles && !m(l.length, t)) ||
            l.push(t);
        }),
          l.length
            ? (i.removeClass("drag-over"), u(i, l))
            : n.prop("files", s.files);
      },
      g = function (e) {
        return (
          !(
            a.settings.extensions.indexOf(
              e.name.replace(new RegExp("^.*\\."), ".")
            ) < 0
          ) ||
          (alert(
            `The file "${
              e.name
            }" does not match with the accepted file extensions: "${a.settings.extensions.join(
              '", "'
            )}"`
          ),
          !1)
        );
      },
      c = function (e) {
        return (
          !(a.settings.mimes.indexOf(e.type) < 0) ||
          (alert(
            `The file "${
              e.name
            }" does not match with the accepted mime types: "${a.settings.mimes.join(
              '", "'
            )}"`
          ),
          !1)
        );
      },
      f = function (e) {
        return (
          !(e.size > a.settings.maxSize) ||
          (alert(
            `The file "${e.name}" exceeds the maximum size of ${
              a.settings.maxSize / 1024 / 1024
            }Mb`
          ),
          !1)
        );
      },
      m = function (e, t) {
        return (
          !(
            e + s.items.length + a.settings.preloaded.length >=
            a.settings.maxFiles
          ) ||
          (alert(
            `The file "${t.name}" could not be added because the limit of ${a.settings.maxFiles} files was reached`
          ),
          !1)
        );
      },
      u = function (t, n) {
        t.addClass("has-files");
        let i = t.find(".uploaded"),
          a = t.find('input[type="file"]');
        e(n).each(function (e, t) {
          s.items.add(t),
            i.append(l(URL.createObjectURL(t), s.items.length - 1), !1);
        }),
          a.prop("files", s.files);
      },
      h = function () {
        return Date.now() + Math.floor(100 * Math.random() + 1);
      };
    return this.init(), this;
  };
})(jQuery);

let buttonMarkup = `
<div class="w-[20%] flex items-center justify-center px-5 py-3 bg-[#01C47933] rounded-[50px]">
                    <svg xmlns="http://www.w3.org/2000/svg" width="21" height="20" viewBox="0 0 21 20" fill="none" class="w-5 h-5">
                      <path
                      d="M3.9375 17.5C3.35734 17.5 2.80094 17.2695 2.3907 16.8593C1.98047 16.4491 1.75 15.8927 1.75 15.3125V12.1875C1.75 11.9389 1.84877 11.7004 2.02459 11.5246C2.2004 11.3488 2.43886 11.25 2.6875 11.25C2.93614 11.25 3.1746 11.3488 3.35041 11.5246C3.52623 11.7004 3.625 11.9389 3.625 12.1875V15.3125C3.625 15.485 3.765 15.625 3.9375 15.625H17.0625C17.1454 15.625 17.2249 15.5921 17.2835 15.5335C17.3421 15.4749 17.375 15.3954 17.375 15.3125V12.1875C17.375 11.9389 17.4738 11.7004 17.6496 11.5246C17.8254 11.3488 18.0639 11.25 18.3125 11.25C18.5611 11.25 18.7996 11.3488 18.9754 11.5246C19.1512 11.7004 19.25 11.9389 19.25 12.1875V15.3125C19.25 15.8927 19.0195 16.4491 18.6093 16.8593C18.1991 17.2695 17.6427 17.5 17.0625 17.5H3.9375Z"
                      fill="#01C479" />
                      <path
                      d="M15.2254 5.89994C15.3124 5.98694 15.3814 6.09022 15.4285 6.2039C15.4756 6.31757 15.4998 6.4394 15.4998 6.56244C15.4998 6.68547 15.4756 6.80731 15.4285 6.92098C15.3814 7.03465 15.3124 7.13794 15.2254 7.22494C15.1384 7.31194 15.0351 7.38095 14.9214 7.42803C14.8078 7.47512 14.6859 7.49935 14.5629 7.49935C14.4399 7.49935 14.318 7.47512 14.2044 7.42803C14.0907 7.38095 13.9874 7.31194 13.9004 7.22494L11.4379 4.76369V11.8749C11.4379 12.1236 11.3391 12.362 11.1633 12.5378C10.9875 12.7137 10.749 12.8124 10.5004 12.8124C10.2518 12.8124 10.0133 12.7137 9.83748 12.5378C9.66166 12.362 9.56289 12.1236 9.56289 11.8749V4.76369L7.10039 7.22494C7.01339 7.31194 6.91011 7.38095 6.79644 7.42803C6.68276 7.47512 6.56093 7.49935 6.43789 7.49935C6.31486 7.49935 6.19302 7.47512 6.07935 7.42803C5.96568 7.38095 5.86239 7.31194 5.77539 7.22494C5.68839 7.13794 5.61938 7.03465 5.5723 6.92098C5.52521 6.80731 5.50098 6.68547 5.50098 6.56244C5.50098 6.4394 5.52521 6.31757 5.5723 6.2039C5.61938 6.09022 5.68839 5.98694 5.77539 5.89994L9.83789 1.83744C9.92485 1.75036 10.0281 1.68127 10.1418 1.63414C10.2555 1.58701 10.3773 1.56274 10.5004 1.56274C10.6235 1.56274 10.7453 1.58701 10.859 1.63414C10.9727 1.68127 11.0759 1.75036 11.1629 1.83744L15.2254 5.89994Z"
                      fill="#01C479" />
                    </svg>
                  </div>

`;

let textMarkup = `
<p class="text-sm md:text-base mt-5"><span class="!inline-block font-medium text-[#01C479]">Click here</span> to upload or drop media here</p>
`

let deleteIcon = `
<svg xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="20" height="20" viewBox="0,0,256,256"
style="fill:red;">
<g fill="#fa5252" fill-rule="nonzero" stroke="none" stroke-width="1" stroke-linecap="butt" stroke-linejoin="miter" stroke-miterlimit="10" stroke-dasharray="" stroke-dashoffset="0" font-family="none" font-weight="none" font-size="none" text-anchor="none" style="mix-blend-mode: normal"><g transform="scale(10.66667,10.66667)"><path d="M10,2l-1,1h-5v2h3h10h3v-2h-5l-1,-1zM5,7v15h14v-15z"></path></g></g>
</svg>
`
